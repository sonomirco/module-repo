name: Checks for changes

on:
  workflow_dispatch:
  
jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'packages' output variable
      packages: ${{ steps.filter.outputs.changes }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          Gh-Components: 'Gh-Components/**'
          ModulComponents: 'ModulComponents/**'

  # JOB to build and test each of modified packages
  build:
    needs: changes
    strategy:
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        package: ['Gh-Components', 'ModulComponents'] # ${{ fromJSON(needs.changes.outputs.packages) }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Read-yaml action
      id: Read-yaml
      uses: jbutcher5/read-yaml@main 
      with:
        file: '.github/version.yml'
        key-path: '["${{matrix.package}}"]'
        
    - name: ⚙️ Bump if alpha.
      id: bump-with-alpha
      uses: actions/github-script@v3
      with:
        result-encoding: string
        script: |
                const incoming = "${{ steps.yaml-data.outputs.data }}"
                console.log("Incoming Tag: " + incoming)
                if(incoming.includes('alpha')) {
                  const oldNum = incoming.match(/alpha[.]*(\d+)/)[1]
                  const newNum = parseInt(oldNum)+1
                  const newTag = incoming.replace(/alpha.*\d+/, `alpha.${newNum}`)
                  console.log("New Tag: " + newTag)
                  return newTag
                }
                else {
                  const newTag =incoming +'-alpha.0'
                  console.log("New Tag: " + newTag)
                  return newTag
                }
          
    - name: Create directory
      id: directory
      run: | 
        dir='${{matrix.package}}/${{matrix.package}}.proj'
        dir2=${{ format('{0}/{1}.{2}', ${{matrix.package}}, ${{matrix.package}}, proj) }}
        echo $dir
        echo "::set-output name=proj-dir::$dir"

    - name: Update values.yaml
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: '.github/version.yml'
        propertyPath: '${{matrix.package}}'
        value: ${{steps.bump-with-alpha.outputs.result}}
        commitChange: false
        updateFile: true
        
        
        
        
        
        
        
        
        
        
        
        
        
        
